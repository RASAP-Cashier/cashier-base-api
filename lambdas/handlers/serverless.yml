service: project-name-lambda-handlers

frameworkVersion: "3"

plugins:
  - serverless-plugin-typescript

# common variables for using in all stages
custom:
  projectName: project-name # copy values from cloudformation outputs
  bucketName: bucket-name # copy values from cloudformation outputs
  region: us-east-1
  memorySize: 512
  timeout: 5
  ephemeralStorageSize: 512

# variables by stage (copy values from cloudformation outputs if needed)
params:
  default:
    deploymentBucket: ${self:custom.bucketName}-dev
    executionRole: arn:aws:iam::123456789012:role/project-name-dev-LambdaExecutionRole-us-east-1
  #    dbHost: project-name-dev.qwerty.us-east-1.rds.amazonaws.com
  #    securityGroupId: sg-1234567890qwertyu
  #    subnetId1: subnet-1234567890asdfghj
  #    subnetId2: subnet-1234567890zxcvbnm
  production:
    deploymentBucket: ${self:custom.bucketName}
    executionRole: arn:aws:iam::123456789012:role/project-name-LambdaExecutionRole-us-east-1
#    dbHost: project-name.qwerty.us-east-1.rds.amazonaws.com
#    securityGroupId: sg-1234567890qwertyu
#    subnetId1: subnet-1234567890asdfghj
#    subnetId2: subnet-1234567890zxcvbnm

provider:
  name: aws
  runtime: nodejs16.x
  memorySize: ${self:custom.memorySize}
  timeout: ${self:custom.timeout}
  region: ${self:custom.region}
  deploymentBucket:
    name: ${param:deploymentBucket}-deploy
  iam:
    role: ${param:executionRole}
#  vpc:
#    securityGroupIds:
#      - ${param:securityGroupId}
#    subnetIds:
#      - ${param:subnetId1}
#      - ${param:subnetId2}
#  Reference Variables using the SSM Parameter Store
#  environment:
#     DB_NAME: ${ssm:/${self:custom.projectName}/${sls:stage}/DB_NAME}
#     DB_USER: ${ssm:/${self:custom.projectName}/${sls:stage}/DB_USER}
#     DB_HOST: ${ssm:/${self:custom.projectName}/${sls:stage}/DB_HOST}
#     DB_PASSWORD: ${ssm:/${self:custom.projectName}/${sls:stage}/DB_PASSWORD}
#     NODE_ENV: ${sls:stage}
#     DB_PORT: 3306

functions:
  transcode:
    handler: handler.handler
    name: ${self:custom.projectName}-handler-${sls:stage}
    ephemeralStorageSize: ${self:custom.ephemeralStorageSize}
